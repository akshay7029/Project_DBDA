import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, LabelEncoder
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import r2_score, mean_squared_error
import pickle

# Load data
df = pd.read_csv('your_data.csv')

# Drop unwanted columns
df = df.drop(columns=['hydration_level', 'Season', 'Intensity', 'hours_sleep', 'Mood'])

# Encode 'Sex' column (male=0, female=1)
df['Sex'] = df['Sex'].map({'male': 0, 'female': 1})

# Drop 'id' if it exists (usually not useful for prediction)
if 'id' in df.columns:
    df = df.drop(columns=['id'])

# Define features and target
X = df.drop(columns=['Calories'])
y = df['Calories']

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Scale features
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

# Train model
model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train_scaled, y_train)

# Evaluate
y_pred = model.predict(X_test_scaled)
print(f"R2 Score: {r2_score(y_test, y_pred):.4f}")
print(f"MSE: {mean_squared_error(y_test, y_pred):.4f}")

# Save model and scaler
pickle.dump(model, open('calories_model.pkl', 'wb'))
pickle.dump(scaler, open('scaler.pkl', 'wb'))
